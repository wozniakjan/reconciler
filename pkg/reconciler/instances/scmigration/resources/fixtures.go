// Code generated by reverse-kube-resource. DO NOT EDIT.

package resources

import (
	addonsv1alpha1 "github.com/kyma-project/helm-broker/pkg/apis/addons/v1alpha1"
	admissionregistrationv1 "k8s.io/api/admissionregistration/v1"
	appsv1 "k8s.io/api/apps/v1"
	corev1 "k8s.io/api/core/v1"
	rbacv1 "k8s.io/api/rbac/v1"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime"
)

var (
	// ServiceAccount "helm-broker-etcd-stateful-etcd-certs"
	helmBrokerEtcdStatefulEtcdCertsServiceAccount = corev1.ServiceAccount{
		ObjectMeta: metav1.ObjectMeta{
			Name:      "helm-broker-etcd-stateful-etcd-certs",
			Namespace: "kyma-system",
		},
	}

	// ServiceAccount "helm-broker"
	helmBrokerServiceAccount = corev1.ServiceAccount{
		ObjectMeta: metav1.ObjectMeta{
			Name:      "helm-broker",
			Namespace: "kyma-system",
		},
	}

	// Secret "helm-broker-webhook-cert"
	helmBrokerWebhookCertSecret = corev1.Secret{
		ObjectMeta: metav1.ObjectMeta{
			Name:      "helm-broker-webhook-cert",
			Namespace: "kyma-system",
		},
	}

	// ConfigMap "helm-config-map"
	helmConfigMapConfigMap = corev1.ConfigMap{
		ObjectMeta: metav1.ObjectMeta{
			Name:      "helm-config-map",
			Namespace: "kyma-system",
		},
	}

	// ConfigMap "ssh-cfg"
	sshCfgConfigMap = corev1.ConfigMap{
		ObjectMeta: metav1.ObjectMeta{
			Name:      "ssh-cfg",
			Namespace: "kyma-system",
		},
	}

	// ClusterRole "helm-broker-etcd-stateful-etcd-certs"
	helmBrokerEtcdStatefulEtcdCertsClusterRole = rbacv1.ClusterRole{
		ObjectMeta: metav1.ObjectMeta{
			Name:      "helm-broker-etcd-stateful-etcd-certs",
			Namespace: "kyma-system",
		},
	}

	// ClusterRole "helm-broker-h3"
	helmBrokerH3ClusterRole = rbacv1.ClusterRole{
		ObjectMeta: metav1.ObjectMeta{
			Name: "helm-broker-h3",
		},
	}

	// ClusterRoleBinding "helm-broker-etcd-stateful-etcd-certs"
	helmBrokerEtcdStatefulEtcdCertsClusterRoleBinding = rbacv1.ClusterRoleBinding{
		ObjectMeta: metav1.ObjectMeta{
			Name: "helm-broker-etcd-stateful-etcd-certs",
		},
	}

	// ClusterRoleBinding "helm-broker-h3"
	helmBrokerH3ClusterRoleBinding = rbacv1.ClusterRoleBinding{
		ObjectMeta: metav1.ObjectMeta{
			Name: "helm-broker-h3",
		},
	}

	// Service "helm-broker-etcd-stateful"
	helmBrokerEtcdStatefulService = corev1.Service{
		ObjectMeta: metav1.ObjectMeta{
			Name:      "helm-broker-etcd-stateful",
			Namespace: "kyma-system",
		},
	}

	// Service "helm-broker-etcd-stateful-client"
	helmBrokerEtcdStatefulClientService = corev1.Service{
		ObjectMeta: metav1.ObjectMeta{
			Name:      "helm-broker-etcd-stateful-client",
			Namespace: "kyma-system",
		},
	}

	// Service "helm-broker"
	helmBrokerService = corev1.Service{
		ObjectMeta: metav1.ObjectMeta{
			Name:      "helm-broker",
			Namespace: "kyma-system",
		},
	}

	// Service "helm-broker-webhook"
	helmBrokerWebhookService = corev1.Service{
		ObjectMeta: metav1.ObjectMeta{
			Name:      "helm-broker-webhook",
			Namespace: "kyma-system",
		},
	}

	// Deployment "helm-broker"
	helmBrokerDeployment = appsv1.Deployment{
		ObjectMeta: metav1.ObjectMeta{
			Name:      "helm-broker",
			Namespace: "kyma-system",
		},
	}

	// Deployment "helm-broker-webhook"
	helmBrokerWebhookDeployment = appsv1.Deployment{
		ObjectMeta: metav1.ObjectMeta{
			Name:      "helm-broker-webhook",
			Namespace: "kyma-system",
		},
	}

	// StatefulSet "helm-broker-etcd-stateful"
	helmBrokerEtcdStatefulStatefulSet = appsv1.StatefulSet{
		ObjectMeta: metav1.ObjectMeta{
			Name:      "helm-broker-etcd-stateful",
			Namespace: "kyma-system",
		},
	}

	// ClusterAddonsConfiguration "helm-repos-urls"
	helmReposUrlsClusterAddonsConfiguration = addonsv1alpha1.ClusterAddonsConfiguration{
		ObjectMeta: metav1.ObjectMeta{
			Name: "helm-repos-urls",
		},
	}

	// MutatingWebhookConfiguration "helm-broker-mutating-webhook"
	helmBrokerMutatingWebhookMutatingWebhookConfiguration = admissionregistrationv1.MutatingWebhookConfiguration{
		ObjectMeta: metav1.ObjectMeta{
			Name: "helm-broker-mutating-webhook",
		},
	}

	// ServiceAccount "service-catalog-controller-manager"
	serviceCatalogControllerManagerServiceAccount = corev1.ServiceAccount{
		ObjectMeta: metav1.ObjectMeta{
			Name:      "service-catalog-controller-manager",
			Namespace: "kyma-system",
		},
	}

	// ServiceAccount "service-catalog-webhook"
	serviceCatalogWebhookServiceAccount = corev1.ServiceAccount{
		ObjectMeta: metav1.ObjectMeta{
			Name:      "service-catalog-webhook",
			Namespace: "kyma-system",
		},
	}

	// Secret "service-catalog-catalog-webhook-cert"
	serviceCatalogCatalogWebhookCertSecret = corev1.Secret{
		ObjectMeta: metav1.ObjectMeta{
			Name:      "service-catalog-catalog-webhook-cert",
			Namespace: "kyma-system",
		},
	}

	// ClusterRole "servicecatalog.k8s.io:controller-manager"
	servicecatalogK8SIocontrollerManagerClusterRole = rbacv1.ClusterRole{
		ObjectMeta: metav1.ObjectMeta{
			Name: "servicecatalog.k8s.io:controller-manager",
		},
	}

	// ClusterRole "servicecatalog.k8s.io:service-catalog-readiness"
	servicecatalogK8SIoserviceCatalogReadinessClusterRole = rbacv1.ClusterRole{
		ObjectMeta: metav1.ObjectMeta{
			Name: "servicecatalog.k8s.io:service-catalog-readiness",
		},
	}

	// ClusterRole "servicecatalog.k8s.io:webhook"
	servicecatalogK8SIowebhookClusterRole = rbacv1.ClusterRole{
		ObjectMeta: metav1.ObjectMeta{
			Name: "servicecatalog.k8s.io:webhook",
		},
	}

	// ClusterRoleBinding "servicecatalog.k8s.io:controller-manager"
	servicecatalogK8SIocontrollerManagerClusterRoleBinding = rbacv1.ClusterRoleBinding{
		ObjectMeta: metav1.ObjectMeta{
			Name: "servicecatalog.k8s.io:controller-manager",
		},
	}

	// ClusterRoleBinding "servicecatalog.k8s.io:service-catalog-readiness"
	servicecatalogK8SIoserviceCatalogReadinessClusterRoleBinding = rbacv1.ClusterRoleBinding{
		ObjectMeta: metav1.ObjectMeta{
			Name: "servicecatalog.k8s.io:service-catalog-readiness",
		},
	}

	// ClusterRoleBinding "servicecatalog.k8s.io:webhook"
	servicecatalogK8SIowebhookClusterRoleBinding = rbacv1.ClusterRoleBinding{
		ObjectMeta: metav1.ObjectMeta{
			Name: "servicecatalog.k8s.io:webhook",
		},
	}

	// Role "servicecatalog.k8s.io:cluster-info-configmap"
	servicecatalogK8SIoclusterInfoConfigmapRole = rbacv1.Role{
		ObjectMeta: metav1.ObjectMeta{
			Name:      "servicecatalog.k8s.io:cluster-info-configmap",
			Namespace: "kyma-system",
		},
	}

	// Role "servicecatalog.k8s.io:leader-locking-controller-manager"
	servicecatalogK8SIoleaderLockingControllerManagerRole = rbacv1.Role{
		ObjectMeta: metav1.ObjectMeta{
			Name:      "servicecatalog.k8s.io:leader-locking-controller-manager",
			Namespace: "kyma-system",
		},
	}

	// RoleBinding "service-catalog-controller-manager-cluster-info"
	serviceCatalogControllerManagerClusterInfoRoleBinding = rbacv1.RoleBinding{
		ObjectMeta: metav1.ObjectMeta{
			Name:      "service-catalog-controller-manager-cluster-info",
			Namespace: "kyma-system",
		},
	}

	// RoleBinding "service-catalog-controller-manager-leader-election"
	serviceCatalogControllerManagerLeaderElectionRoleBinding = rbacv1.RoleBinding{
		ObjectMeta: metav1.ObjectMeta{
			Name:      "service-catalog-controller-manager-leader-election",
			Namespace: "kyma-system",
		},
	}

	// Service "service-catalog-catalog-controller-manager"
	serviceCatalogCatalogControllerManagerService = corev1.Service{
		ObjectMeta: metav1.ObjectMeta{
			Name:      "service-catalog-catalog-controller-manager",
			Namespace: "kyma-system",
		},
	}

	// Service "service-catalog-catalog-webhook"
	serviceCatalogCatalogWebhookService = corev1.Service{
		ObjectMeta: metav1.ObjectMeta{
			Name:      "service-catalog-catalog-webhook",
			Namespace: "kyma-system",
		},
	}

	// Deployment "service-catalog-catalog-controller-manager"
	serviceCatalogCatalogControllerManagerDeployment = appsv1.Deployment{
		ObjectMeta: metav1.ObjectMeta{
			Name:      "service-catalog-catalog-controller-manager",
			Namespace: "kyma-system",
		},
	}

	// Deployment "service-catalog-catalog-webhook"
	serviceCatalogCatalogWebhookDeployment = appsv1.Deployment{
		ObjectMeta: metav1.ObjectMeta{
			Name:      "service-catalog-catalog-webhook",
			Namespace: "kyma-system",
		},
	}

	// MutatingWebhookConfiguration "service-catalog-catalog-webhook"
	serviceCatalogCatalogWebhookMutatingWebhookConfiguration = admissionregistrationv1.MutatingWebhookConfiguration{
		ObjectMeta: metav1.ObjectMeta{
			Name: "service-catalog-catalog-webhook",
		},
	}

	// ValidatingWebhookConfiguration "service-catalog-catalog-validating-webhook"
	serviceCatalogCatalogValidatingWebhookValidatingWebhookConfiguration = admissionregistrationv1.ValidatingWebhookConfiguration{
		ObjectMeta: metav1.ObjectMeta{
			Name: "service-catalog-catalog-validating-webhook",
		},
	}

	hbResources = []runtime.Object{
		helmBrokerEtcdStatefulEtcdCertsServiceAccount,
		helmBrokerServiceAccount,
		helmBrokerWebhookCertSecret,
		helmConfigMapConfigMap,
		sshCfgConfigMap,
		helmBrokerEtcdStatefulEtcdCertsClusterRole,
		helmBrokerH3ClusterRole,
		helmBrokerEtcdStatefulEtcdCertsClusterRoleBinding,
		helmBrokerH3ClusterRoleBinding,
		helmBrokerEtcdStatefulService,
		helmBrokerEtcdStatefulClientService,
		helmBrokerService,
		helmBrokerWebhookService,
		helmBrokerDeployment,
		helmBrokerWebhookDeployment,
		helmBrokerEtcdStatefulStatefulSet,
		helmReposUrlsClusterAddonsConfiguration,
		helmBrokerMutatingWebhookMutatingWebhookConfiguration,
	}

	svcatResources = []runtime.Object{
		serviceCatalogControllerManagerServiceAccount,
		serviceCatalogWebhookServiceAccount,
		serviceCatalogCatalogWebhookCertSecret,
		servicecatalogK8SIocontrollerManagerClusterRole,
		servicecatalogK8SIoserviceCatalogReadinessClusterRole,
		servicecatalogK8SIowebhookClusterRole,
		servicecatalogK8SIocontrollerManagerClusterRoleBinding,
		servicecatalogK8SIoserviceCatalogReadinessClusterRoleBinding,
		servicecatalogK8SIowebhookClusterRoleBinding,
		servicecatalogK8SIoclusterInfoConfigmapRole,
		servicecatalogK8SIoleaderLockingControllerManagerRole,
		serviceCatalogControllerManagerClusterInfoRoleBinding,
		serviceCatalogControllerManagerLeaderElectionRoleBinding,
		serviceCatalogCatalogControllerManagerService,
		serviceCatalogCatalogWebhookService,
		serviceCatalogCatalogControllerManagerDeployment,
		serviceCatalogCatalogWebhookDeployment,
		serviceCatalogCatalogWebhookMutatingWebhookConfiguration,
		serviceCatalogCatalogValidatingWebhookValidatingWebhookConfiguration,
	}
)
